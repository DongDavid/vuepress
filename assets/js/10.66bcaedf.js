(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{49:function(e,n,r){"use strict";r.r(n);var o=r(0),t=Object(o.a)({},function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"docker命令。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker命令。","aria-hidden":"true"}},[e._v("#")]),e._v(" docker命令。")]),e._v(" "),r("p",[e._v("Commands:\nattach    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像\nbuild     Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像\ncommit    Create a new image from a container's changes # 提交当前容器为新的镜像\ncp        Copy files/folders from the containers filesystem to the host path\n# 从容器中拷贝指定文件或者目录到宿主机中\ncreate    Create a new container                        # 创建一个新的容器，同 run，但不启动容器\ndiff      Inspect changes on a container's filesystem   # 查看 docker 容器变化\nevents    Get real time events from the server          # 从 docker 服务获取容器实时事件\nexec      Run a command in an existing container        # 在已存在的容器上运行命令\nexport    Stream the contents of a container as a tar archive"),r("br"),e._v("\n# 导出容器的内容流作为一个 tar 归档文件[对应 import ]\nhistory   Show the history of an image                  # 展示一个镜像形成历史\nimages    List images                                   # 列出系统当前镜像\nimport    Create a new filesystem image from the contents of a tarball"),r("br"),e._v("\n# 从tar包中的内容创建一个新的文件系统映像[对应 export]\ninfo      Display system-wide information               # 显示系统相关信息\ninspect   Return low-level information on a container   # 查看容器详细信息\nkill      Kill a running container                      # kill 指定 docker 容器\nload      Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]\nlogin     Register or Login to the docker registry server"),r("br"),e._v("\n# 注册或者登陆一个 docker 源服务器\nlogout    Log out from a Docker registry server         # 从当前 Docker registry 退出\nlogs      Fetch the logs of a container                 # 输出当前容器日志信息\nport      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT\n# 查看映射端口对应的容器内部源端口\npause     Pause all processes within a container        # 暂停容器\nps        List containers                               # 列出容器列表\npull      Pull an image or a repository from the docker registry server\n# 从docker镜像源服务器拉取指定镜像或者库镜像\npush      Push an image or a repository to the docker registry server\n# 推送指定镜像或者库镜像至docker源服务器\nrestart   Restart a running container                   # 重启运行的容器\nrm        Remove one or more containers                 # 移除一个或者多个容器\nrmi       Remove one or more images"),r("br"),e._v("\n# 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]\nrun       Run a command in a new container\n# 创建一个新的容器并运行一个命令\nsave      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]\nsearch    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像\nstart     Start a stopped containers                    # 启动容器\nstop      Stop a running containers                     # 停止容器\ntag       Tag an image into a repository                # 给源中镜像打标签\ntop       Lookup the running processes of a container   # 查看容器中运行的进程信息\nunpause   Unpause a paused container                    # 取消暂停容器\nversion   Show the docker version information           # 查看 docker 版本号\nwait      Block until a container stops, then print its exit code"),r("br"),e._v("\n# 截取容器停止时的退出状态值\nRun 'docker COMMAND --help' for more information on a command.")])])},[],!1,null,null,null);n.default=t.exports}}]);